<template name="updateTask" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="id" description="Identifier of the task." />
	<parameter name="name" description="Name of the task." />
	<parameter name="location"
		description="The location where the task needs to be addressed." />
	<parameter name="case"
		description="Identifier of the case under which the task needs to be filed." />
	<parameter name="startDate" description="Start date of the task." />
	<parameter name="endDate" description="End date of the task." />
	<parameter name="customer" description="Customer ID related to the task." />
	<parameter name="assignedUserId" description="ID of the assigned user." />
	<parameter name="isDeleted" description="Indicates the task is deleted or not." />
	<parameter name="isCompleted" description="Indicates the task is completed or not." />
	<parameter name="taskType" description="Type of the task." />
	<parameter name="opportunity"
		description="Identifier of the opportunity under which the task needs to be filed." />

	<sequence>
		<property name="uri.var.id" expression="$func:id" />
		<property name="uri.var.name" expression="$func:name" />
		<property name="uri.var.location" expression="$func:location" />
		<property name="uri.var.case" expression="$func:case" />
		<property name="uri.var.startDate" expression="$func:startDate" />
		<property name="uri.var.endDate" expression="$func:endDate" />
		<property name="uri.var.customer" expression="$func:customer" />
		<property name="uri.var.assignedUserId" expression="$func:assignedUserId" />
		<property name="uri.var.isDeleted" expression="$func:isDeleted"/>
		<property name="uri.var.isCompleted" expression="$func:isCompleted" />
		<property name="uri.var.taskType" expression="$func:taskType" />
		<property name="uri.var.opportunity" expression="$func:opportunity" />


		<script language="js">
		  			<![CDATA[		  				  				
	  				var id = mc.getProperty("uri.var.id");
  					var updatedCase = mc.getProperty("uri.var.case");
  					var name = mc.getProperty("uri.var.name");
  					var location = mc.getProperty("uri.var.location");
  					var customer = mc.getProperty("uri.var.customer");
  					var assignedUserId = mc.getProperty("uri.var.assignedUserId");
  					var taskType = mc.getProperty("uri.var.taskType");
  					var opportunity = mc.getProperty("uri.var.opportunity");
					var startDate = mc.getProperty("uri.var.startDate");
					var endDate = mc.getProperty("uri.var.endDate");
					var isDeleted = mc.getProperty("uri.var.isDeleted");
					var isCompleted = mc.getProperty("uri.var.isCompleted");
	  				
	  				var	payload = {};
	  				
	  				if ( id != null && id != "") {
	  					payload ["id"] = id.trim();;
	  				}
	  				if ( updatedCase != null && updatedCase != "") {
	  					payload ["case"] = updatedCase.trim();;
	  				}
	  				if ( name != null && name != "") {
	  					payload ["name"] = name.trim();;
	  				}
	  				if ( location != null && location != "") {
	  					payload ["location"] = location.trim();;
	  				}
	  				if ( customer != null && customer != "") {
	  					payload ["cust"] = customer.trim();;
	  				}
	  				if ( assignedUserId != null && assignedUserId != "") {
	  					payload ["aUserId"] = assignedUserId.trim();;
	  				}
	  				if ( taskType != null && taskType != "") {
	  					payload ["atype"] = taskType.trim();;
	  				}
	  				if ( opportunity != null && opportunity != "") {
	  					payload ["opportunity"] = opportunity.trim();;
	  				}
	  				if ( startDate != null && startDate != "") { 
	  					payload ["startDate"] = eval("("+startDate+")");
	  				}
	  				if ( endDate != null && endDate != "") {
	  					payload ["endDate"] = eval("("+endDate+")");
	  				}
	  				if ( isDeleted != null && isDeleted != "") { 
	  					if(isDeleted.toLowerCase() == "false" || isDeleted.toLowerCase() == "true"){
	  						payload ["is_deleted"] = eval("("+isDeleted.toLowerCase()+")");
	  					}else{
	  						payload ["is_deleted"] = isDeleted;
	  					}
	  				}
	  				if ( isCompleted != null && isCompleted != "" ) { 
	  					if(isCompleted.toLowerCase() == "false" || isCompleted.toLowerCase() == "true"){
	  						payload ["is_completed"] = eval("("+isCompleted.toLowerCase()+")");
	  					}else{
	  						payload ["is_completed"] = isCompleted;
	  					}
	  				}
	  				
					mc.setPayloadJSON(payload);
					]]>
		</script>
		
		<call>
			<endpoint>
				<http method="put" uri-template="{uri.var.apiUrl}/task/{uri.var.id}" />
			</endpoint>
		</call>



	</sequence>
</template>
