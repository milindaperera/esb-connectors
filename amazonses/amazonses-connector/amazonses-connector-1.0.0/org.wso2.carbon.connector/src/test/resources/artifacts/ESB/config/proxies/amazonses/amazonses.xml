<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="amazonses"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
   <target>
      <inSequence>
         <property name="region" expression="json-eval($.region)"/>
         <property name="secretAccessKey" expression="json-eval($.secretAccessKey)"/>
         <property name="accessKeyId" expression="json-eval($.accessKeyId)"/>
         <property name="version" expression="json-eval($.version)"/>
         <property name="identityType" expression="json-eval($.identityType)"/>
         <property name="nextToken" expression="json-eval($.nextToken)"/>
         <property name="maxItems" expression="json-eval($.maxItems)"/>
         <property name="emailAddress" expression="json-eval($.emailAddress)"/>
         <property name="domain" expression="json-eval($.domain)"/>
         <property name="identity" expression="json-eval($.identity)"/>
         <property name="forwardingEnabled" expression="json-eval($.forwardingEnabled)"/>
         <property name="identities" expression="json-eval($.identities)"/>
		 <property name="dkimEnabled" expression="json-eval($.dkimEnabled)"/>
         <property name="messageBody" expression="json-eval($.messageBody)"/>
         <property name="toAddresses" expression="json-eval($.toAddresses)"/>
         <property name="source" expression="json-eval($.source)"/>
         <property name="messageSubject" expression="json-eval($.messageSubject)"/>
         <property name="bccAddresses" expression="json-eval($.bccAddresses)"/>
         <property name="returnPath" expression="json-eval($.returnPath)"/>
         <property name="replyToAddresses" expression="json-eval($.replyToAddresses)"/>
         <property name="ccAddresses" expression="json-eval($.ccAddresses)"/>
         <property name="rawMessage" expression="json-eval($.rawMessage)"/>
         <property name="destinations" expression="json-eval($.destinations)"/>
         <property name="notificationType" expression="json-eval($.notificationType)"/>
         <property name="snsTopic" expression="json-eval($.snsTopic)"/>
         <amazonses.init>
            <region>{$ctx:region}</region>
            <secretAccessKey>{$ctx:secretAccessKey}</secretAccessKey>
            <accessKeyId>{$ctx:accessKeyId}</accessKeyId>
            <version>{$ctx:version}</version>
         </amazonses.init>
         <switch source="get-property('transport','Action')">
            <case regex="urn:listIdentities">
               <amazonses.listIdentities>
                  <identityType>{$ctx:identityType}</identityType>
                  <nextToken>{$ctx:nextToken}</nextToken>
                  <maxItems>{$ctx:maxItems}</maxItems>
               </amazonses.listIdentities>
            </case>
            <case regex="urn:verifyEmailIdentity">
               <amazonses.verifyEmailIdentity>
                  <emailAddress>{$ctx:emailAddress}</emailAddress>
               </amazonses.verifyEmailIdentity>
            </case>
            <case regex="urn:verifyDomainIdentity">
               <amazonses.verifyDomainIdentity>
                  <domain>{$ctx:domain}</domain>
               </amazonses.verifyDomainIdentity>
            </case>
            <case regex="urn:listDomainDkim">
               <amazonses.listDomainDkim>
                  <domain>{$ctx:domain}</domain>
               </amazonses.listDomainDkim>
            </case>
            <case regex="urn:setIdentityFeedbackForwardingEnabled">
               <amazonses.setIdentityFeedbackForwardingEnabled>
                  <identity>{$ctx:identity}</identity>
                  <forwardingEnabled>{$ctx:forwardingEnabled}</forwardingEnabled>
               </amazonses.setIdentityFeedbackForwardingEnabled>
            </case>
            <case regex="urn:listIdentityDkimAttributes">
               <amazonses.listIdentityDkimAttributes>
                  <identities>{$ctx:identities}</identities>
               </amazonses.listIdentityDkimAttributes>
            </case>
            <case regex="urn:listIdentityNotificationAttributes">
               <amazonses.listIdentityNotificationAttributes>
                  <identities>{$ctx:identities}</identities>
               </amazonses.listIdentityNotificationAttributes>
            </case>
            <case regex="urn:listIdentityVerificationAttributes">
               <amazonses.listIdentityVerificationAttributes>
                  <identities>{$ctx:identities}</identities>
               </amazonses.listIdentityVerificationAttributes>
            </case>
            <case regex="urn:setIdentityDkimEnabled">
               <amazonses.setIdentityDkimEnabled>
                  <identity>{$ctx:identity}</identity>
                  <dkimEnabled>{$ctx:dkimEnabled}</dkimEnabled>
               </amazonses.setIdentityDkimEnabled>
            </case>
            <case regex="urn:deleteIdentity">
               <amazonses.deleteIdentity>
                  <identity>{$ctx:identity}</identity>
               </amazonses.deleteIdentity>
            </case>
            <case regex="urn:sendEmail">
               <amazonses.sendEmail>
                  <messageBody>{$ctx:messageBody}</messageBody>
                  <toAddresses>{$ctx:toAddresses}</toAddresses>
                  <source>{$ctx:source}</source>
                  <messageSubject>{$ctx:messageSubject}</messageSubject>
                  <bccAddresses>{$ctx:bccAddresses}</bccAddresses>
                  <returnPath>{$ctx:returnPath}</returnPath>
                  <replyToAddresses>{$ctx:replyToAddresses}</replyToAddresses>
                  <ccAddresses>{$ctx:ccAddresses}</ccAddresses>
               </amazonses.sendEmail>
            </case>
            <case regex="urn:sendRawEmail">
               <amazonses.sendRawEmail>
                  <rawMessage>{$ctx:rawMessage}</rawMessage>
                  <destinations>{$ctx:destinations}</destinations>
                  <source>{$ctx:source}</source>
               </amazonses.sendRawEmail>
            </case>
            <case regex="urn:setIdentityNotificationTopic">
               <amazonses.setIdentityNotificationTopic>
                  <identity>{$ctx:identity}</identity>
                  <notificationType>{$ctx:notificationType}</notificationType>
                  <snsTopic>{$ctx:snsTopic}</snsTopic>
               </amazonses.setIdentityNotificationTopic>
            </case>
         </switch>
         <property name="messageType" value="application/json" scope="axis2"/>
         <respond/>
      </inSequence>
      <outSequence>
         <log/>
         <send/>
      </outSequence>
   </target>
   <description/>
</proxy>
                                