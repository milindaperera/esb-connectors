<template name="insertRecords" xmlns="http://ws.apache.org/ns/synapse">
  <parameter name="newFormat" description="The newFormat, an integer determine weather null valus should be excluded(1) or included(2)"/>
  <parameter name="version" description="The API version"/>
  <parameter name="xmlData" description="The xml string containing the data to be inserted"/>
  <parameter name="wfTrigger" description="The wfTrigger parameter is used to trigger the workflow rule while inserting record into CRM account"/>
  <parameter name="duplicateCheck" description="Checking the duplicate records and throw an error response"/>
  <parameter name="isApproval" description="To keep the records in approval mode"/>
  <parameter name="moduleType" description="The type of the module"/>
  
  <sequence>
    <property name="uri.var.newFormat" expression="$func:newFormat"/>
    <property name="uri.var.version" expression="$func:version"/>
    <property name="uri.var.xmlData" expression="$func:xmlData"/>
    <property name="uri.var.wfTrigger" expression="$func:wfTrigger"/>
    <property name="uri.var.duplicateCheck" expression="$func:duplicateCheck"/>
    <property name="uri.var.isApproval" expression="$func:isApproval"/>
    <property name="uri.var.moduleType" expression="$func:moduleType"/>
    
	<payloadFactory media-type="json">
		<format>
			{}
		</format>
	</payloadFactory>
	    
    <script language="js">
			<![CDATA[ 
			
				// Generate url with parameters
				var xmlData = mc.getProperty('uri.var.xmlData');
				var wfTrigger = mc.getProperty('uri.var.wfTrigger'); 
				var duplicateCheck = mc.getProperty('uri.var.duplicateCheck');
				var isApproval = mc.getProperty('uri.var.isApproval');
				var version = mc.getProperty('uri.var.version');
				var newFormat = mc.getProperty('uri.var.newFormat');
				var urlQuery = mc.getProperty('uri.var.urlQuery');
				var moduleType = mc.getProperty('uri.var.moduleType');
				
				// Append mandatory query parameters
				urlQuery += 'xmlData=' + encodeURIComponent(xmlData) + '&';
				
				// Append optional query parameters
				if(wfTrigger != null && wfTrigger != "") {
					urlQuery += 'wfTrigger=' + wfTrigger + '&';
				}
				
				if(duplicateCheck != null && duplicateCheck != "") {
					urlQuery += 'duplicateCheck=' + duplicateCheck + '&';
				}
				
				if(isApproval != null && isApproval != "") {
					urlQuery += 'isApproval=' + isApproval + '&';
				}

				if(newFormat != null && newFormat != "") {
					urlQuery += 'newFormat=' + newFormat + '&';
				}

				if(version != null && version != "") {
					urlQuery += 'version=' + version + '&';
				}
				
				
				urlQuery = '/' + encodeURIComponent(moduleType) + '/insertRecords?' + urlQuery.substring(0, urlQuery.length-1);
				mc.setProperty('uri.var.urlQuery', urlQuery);
							
			]]></script>
			
    <call>
      <endpoint>
        <http method="post" uri-template="{uri.var.apiUrl}/crm/private/json{uri.var.urlQuery}"/>
      </endpoint>
    </call>
    
     <!-- Removing custom headers -->
     <header name="Strict-Transport-Security" action="remove" scope="transport"/>
     <header name="X-XSS-Protection" action="remove" scope="transport"/>
     <header name="X-Download-Options" action="remove" scope="transport"/>
     <header name="X-Content-Type-Options" action="remove" scope="transport"/>
     <header name="Pragma" action="remove" scope="transport"/>
     <header name="Cache-Control" action="remove" scope="transport"/>
     
  </sequence>
</template>