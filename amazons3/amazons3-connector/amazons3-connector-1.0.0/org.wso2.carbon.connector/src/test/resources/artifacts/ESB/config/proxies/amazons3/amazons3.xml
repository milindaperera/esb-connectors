<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse" name="amazons3" transports="https,http" statistics="disable" trace="disable" startOnLoad="true">
	<target>
		<inSequence>
			<property name="accessKeyId" expression="//accessKeyId/text()" />
			<property name="secretAccessKey" expression="//secretAccessKey/text()" />
			<property name="methodType" expression="//methodType/text()" />
			<property name="contentType" expression="//contentType/text()" />
			<property name="bucketName" expression="//bucketName/text()" />
			<property name="isXAmzDate" expression="//isXAmzDate/text()" />
			<property name="xAmzSecurityToken" expression="//xAmzSecurityToken/text()" />
			<property name="contentMD5" expression="//contentMD5/text()" />
			<property name="host" expression="//host/text()" />
			<property name="expect" expression="//expect/text()" />
			<property name="contentLength" expression="//contentLength/text()" />
			<property name="bucketUrl" expression="//bucketUrl/text()" />
			<property name="bucketRegion" expression="//bucketRegion/text()" />
			<property name="xAmzAcl" expression="//xAmzAcl/text()" />
			<property name="xAmzGrantRead" expression="//xAmzGrantRead/text()" />
			<property name="xAmzGrantWrite" expression="//xAmzGrantWrite/text()" />
			<property name="xAmzGrantReadAcp" expression="//xAmzGrantReadAcp/text()" />
			<property name="xAmzGrantWriteAcp" expression="//xAmzGrantWriteAcp/text()" />
			<property name="xAmzGrantFullControl" expression="//xAmzGrantFullControl/text()" />
			<property name="xAmzCopySource" expression="//xAmzCopySource/text()" />
			<property name="websiteConfig" expression="//websiteConfig/*" />
			<property name="apiUrl" expression="//apiUrl/text()" />
			<property name="cacheControl" expression="//cacheControl/text()" />
			<property name="contentDisposition" expression="//contentDisposition/text()" />
			<property name="contentEncoding" expression="//contentEncoding/text()" />
			<property name="objectName" expression="//objectName/text()" />
			<property name="expires" expression="//expires/text()" />
			<property name="ownerId" expression="//ownerId/text()" />
			<property name="bucketPolicy" expression="json-eval($.bucketPolicy)" />
			<property name="ownerDisplayName" expression="//ownerDisplayName/text()" />
			<property name="accessControlList" expression="//accessControlList/Grant" />
			<property name="accessControlPolicy" expression="//accessControlPolicy/*" />
			<property name="destinationObject" expression="//destinationObject/text()" />
			<property name="delimiter" expression="//delimiter/text()" />
			<property name="encodingType" expression="//encodingType/text()" />
			<property name="delimiter" expression="//delimiter/text()" />
			<property name="marker" expression="//marker/text()" />
			<property name="maxKeys" expression="//maxKeys/text()" />
			<property name="prefix" expression="//prefix/text()" />
			<property name="keyMarker" expression="//keyMarker/text()" />
			<property name="versionIdMarker" expression="//versionIdMarker/text()" />
			<property name="responseContentType" expression="//responseContentType/text()" />
			<property name="responseContentLanguage" expression="//responseContentLanguage/text()" />
			<property name="responseExpires" expression="//responseExpires/text()" />
			<property name="responseCacheControl" expression="//responseCacheControl/text()" />
			<property name="responseContentDisposition" expression="//responseContentDisposition/text()" />
			<property name="responseContentEncoding" expression="//responseContentEncoding/text()" />
			<property name="range" expression="//range/text()" />
			<property name="ifModifiedSince" expression="//ifModifiedSince/text()" />
			<property name="ifUnmodifiedSince" expression="//ifUnmodifiedSince/text()" />
			<property name="ifMatch" expression="//ifMatch/text()" />
			<property name="ifNoneMatch" expression="//ifNoneMatch/text()" />
			<property name="quiet" expression="//deleteConfig/Delete/Quiet/text()" />
			<property name="deleteConfig" expression="//deleteConfig/Delete/Object" />
			<property name="uploadId" expression="//uploadId/text()" />
			<property name="partDetails" expression="//partDetails/node()" />
			<property name="uriRemainder" expression="//uriRemainder/text()" />
			<amazons3.init>
				<accessKeyId>{$ctx:accessKeyId}</accessKeyId>
				<secretAccessKey>{$ctx:secretAccessKey}</secretAccessKey>
				<methodType>{$ctx:methodType}</methodType>
				<contentType>{$ctx:contentType}</contentType>
				<bucketName>{$ctx:bucketName}</bucketName>
				<isXAmzDate>{$ctx:isXAmzDate}</isXAmzDate>
				<expect>{$ctx:expect}</expect>
				<contentMD5>{$ctx:contentMD5}</contentMD5>
				<xAmzSecurityToken>{$ctx:xAmzSecurityToken}</xAmzSecurityToken>
				<contentLength>{$ctx:contentLength}</contentLength>
				<host>{$ctx:host}</host>
				<xAmzAcl>{$ctx:xAmzAcl}</xAmzAcl>
				<xAmzGrantRead>{$ctx:xAmzGrantRead}</xAmzGrantRead>
				<xAmzGrantWrite>{$ctx:xAmzGrantWrite}</xAmzGrantWrite>
				<xAmzGrantReadAcp>{$ctx:xAmzGrantReadAcp}</xAmzGrantReadAcp>
				<xAmzGrantWriteAcp>{$ctx:xAmzGrantWriteAcp}</xAmzGrantWriteAcp>
				<xAmzGrantFullControl>{$ctx:xAmzGrantFullControl}</xAmzGrantFullControl>
				<xAmzCopySource>{$ctx:xAmzCopySource}</xAmzCopySource>
			</amazons3.init>
			<switch source="get-property('transport', 'Action')">
				<case regex="urn:createBucket">
					<amazons3.createBucket>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<bucketRegion>{$ctx:bucketRegion}</bucketRegion>
					</amazons3.createBucket>
				</case>
				<case regex="urn:createBucketPolicy">
					<amazons3.createBucketPolicy>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<bucketPolicy>{$ctx:bucketPolicy}</bucketPolicy>
					</amazons3.createBucketPolicy>
				</case>
				<case regex="urn:createBucketWebsiteConfiguration">
					<amazons3.createBucketWebsiteConfiguration>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<websiteConfig>{$ctx:websiteConfig}</websiteConfig>
					</amazons3.createBucketWebsiteConfiguration>
				</case>
				<case regex="urn:deleteBucketPolicy">
					<amazons3.deleteBucketPolicy>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.deleteBucketPolicy>
				</case>
				<case regex="urn:setBucketACL">
					<amazons3.setBucketACL>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<accessControlPolicy>{$ctx:accessControlPolicy}</accessControlPolicy>
					</amazons3.setBucketACL>
				</case>
				<case regex="urn:getBuckets">
					<amazons3.getBuckets>
						<apiUrl>{$ctx:apiUrl}</apiUrl>
					</amazons3.getBuckets>
				</case>
				<case regex="urn:getBucketVersioning">
					<amazons3.getBucketVersioning>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketVersioning>
				</case>
				<case regex="urn:getBucketRequestPayment">
					<amazons3.getBucketRequestPayment>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketRequestPayment>
				</case>
				<case regex="urn:getBucketACL">
					<amazons3.getBucketACL>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketACL>
				</case>
				<case regex="urn:getBucketLifeCycle">
					<amazons3.getBucketLifeCycle>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketLifeCycle>
				</case>
				<case regex="urn:getWebSiteConfiguration">
					<amazons3.getWebSiteConfiguration>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getWebSiteConfiguration>
				</case>
				<case regex="urn:getBucketPolicy">
					<amazons3.getBucketPolicy>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketPolicy>
				</case>
				<case regex="urn:getBucketVersioning">
					<amazons3.getBucketVersioning>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketVersioning>
				</case>
				<case regex="urn:getBucketRequestPayment">
					<amazons3.getBucketRequestPayment>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketRequestPayment>
				</case>
				<case regex="urn:getBucketACL">
					<amazons3.getBucketACL>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketACL>
				</case>
				<case regex="urn:getBucketLifeCycle">
					<amazons3.getBucketLifeCycle>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketLifeCycle>
				</case>
				<case regex="urn:getWebSiteConfiguration">
					<amazons3.getWebSiteConfiguration>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getWebSiteConfiguration>
				</case>
				<case regex="urn:getBucketPolicy">
					<amazons3.getBucketPolicy>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.getBucketPolicy>
				</case>
				<case regex="urn:createObjectACL">
					<amazons3.createObjectACL>
						<objectName>{$ctx:objectName}</objectName>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<ownerId>{$ctx:ownerId}</ownerId>
						<ownerDisplayName>{$ctx:ownerDisplayName}</ownerDisplayName>
						<accessControlList>{$ctx:accessControlList}</accessControlList>
					</amazons3.createObjectACL>
				</case>
				<case regex="urn:createObjectCopy">
					<amazons3.createObjectCopy>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<destinationObject>{$ctx:destinationObject}</destinationObject>
					</amazons3.createObjectCopy>
				</case>
				<case regex="urn:getObjectsInBucket">
					<amazons3.getObjectsInBucket>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<delimiter>{$ctx:delimiter}</delimiter>
						<encodingType>{$ctx:encodingType}</encodingType>
						<marker>{$ctx:marker}</marker>
						<maxKeys>{$ctx:maxKeys}</maxKeys>
						<prefix>{$ctx:prefix}</prefix>
					</amazons3.getObjectsInBucket>
				</case>
				<case regex="urn:getBucketObjectVersions">
					<amazons3.getBucketObjectVersions>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<delimiter>{$ctx:delimiter}</delimiter>
						<encodingType>{$ctx:encodingType}</encodingType>
						<keyMarker>{$ctx:keyMarker}</keyMarker>
						<maxKeys>{$ctx:maxKeys}</maxKeys>
						<prefix>{$ctx:prefix}</prefix>
						<versionIdMarker>{$ctx:versionIdMarker}</versionIdMarker>
					</amazons3.getBucketObjectVersions>
				</case>
				<case regex="urn:getObject">
					<amazons3.getObject>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<objectName>{$ctx:objectName}</objectName>
						<responseContentType>{$ctx:responseContentType}</responseContentType>
						<responseContentLanguage>{$ctx:responseContentLanguage}</responseContentLanguage>
						<responseExpires>{$ctx:responseExpires}</responseExpires>
						<responseCacheControl>{$ctx:responseCacheControl}</responseCacheControl>
						<responseContentDisposition>{$ctx:responseContentDisposition}</responseContentDisposition>
						<responseContentEncoding>{$ctx:responseContentEncoding}</responseContentEncoding>
						<range>{$ctx:range}</range>
						<ifModifiedSince>{$ctx:ifModifiedSince}</ifModifiedSince>
						<ifUnmodifiedSince>{$ctx:ifUnmodifiedSince}</ifUnmodifiedSince>
						<ifMatch>{$ctx:ifMatch}</ifMatch>
						<ifNoneMatch>{$ctx:ifNoneMatch}</ifNoneMatch>
					</amazons3.getObject>
				</case>
				<case regex="urn:getObjectMetaData">
					<amazons3.getObjectMetaData>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<objectName>{$ctx:objectName}</objectName>
						<range>{$ctx:range}</range>
						<ifModifiedSince>{$ctx:ifModifiedSince}</ifModifiedSince>
						<ifUnmodifiedSince>{$ctx:ifUnmodifiedSince}</ifUnmodifiedSince>
						<ifMatch>{$ctx:ifMatch}</ifMatch>
						<ifNoneMatch>{$ctx:ifNoneMatch}</ifNoneMatch>
					</amazons3.getObjectMetaData>
				</case>
				<case regex="urn:checkBucketPermission">
					<amazons3.checkBucketPermission>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.checkBucketPermission>
				</case>
				<case regex="urn:deleteObject">
					<amazons3.deleteObject>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<objectName>{$ctx:objectName}</objectName>
						<versionId>{$ctx:versionId}</versionId>
					</amazons3.deleteObject>
				</case>
				<case regex="urn:deleteMultipleObjects">
					<amazons3.deleteMultipleObjects>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<quiet>{$ctx:quiet}</quiet>
						<deleteConfig>{$ctx:deleteConfig}</deleteConfig>
					</amazons3.deleteMultipleObjects>
				</case>
				<case regex="urn:deleteBucketWebsiteConfiguration">
					<amazons3.deleteBucketWebsiteConfiguration>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.deleteBucketWebsiteConfiguration>
				</case>
				<case regex="urn:deleteBucket">
					<amazons3.deleteBucket>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.deleteBucket>
				</case>
				<case regex="urn:initMultipartUpload">
					<amazons3.initMultipartUpload>
						<cacheControl>{$ctx:cacheControl}</cacheControl>
						<contentDisposition>{$ctx:contentDisposition}</contentDisposition>
						<contentEncoding>{$ctx:contentEncoding}</contentEncoding>
						<expires>{$ctx:expires}</expires>
						<objectName>{$ctx:objectName}</objectName>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
					</amazons3.initMultipartUpload>
				</case>
				<case regex="urn:abortMultipartUpload">
					<amazons3.abortMultipartUpload>
						<cacheControl>{$ctx:cacheControl}</cacheControl>
						<contentDisposition>{$ctx:contentDisposition}</contentDisposition>
						<contentEncoding>{$ctx:contentEncoding}</contentEncoding>
						<expires>{$ctx:expires}</expires>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<objectName>{$ctx:objectName}</objectName>
						<uploadId>{$ctx:uploadId}</uploadId>
					</amazons3.abortMultipartUpload>
				</case>
				<case regex="urn:completeMultipartUpload">
					<amazons3.completeMultipartUpload>
						<partDetails>{$ctx:partDetails}</partDetails>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<objectName>{$ctx:objectName}</objectName>
						<uploadId>{$ctx:uploadId}</uploadId>
					</amazons3.completeMultipartUpload>
				</case>
				<case regex="urn:getAuthorization">
					<amazons3.getAuthorization>
						<uriRemainder>{$ctx:uriRemainder}</uriRemainder>
					</amazons3.getAuthorization>
				</case>
				<case regex="urn:listMultipartUploads">
					<amazons3.listMultipartUploads>
						<bucketUrl>{$ctx:bucketUrl}</bucketUrl>
						<maxUploads>{$ctx:maxUploads}</maxUploads>
					</amazons3.listMultipartUploads>
				</case>
				<case regex="urn:listParts">
	               <amazons3.listParts>
	                  <uploadId>{$ctx:uploadId}</uploadId>
	                  <contentEncoding>{$ctx:contentEncoding}</contentEncoding>
	                  <encodingType>{$ctx:encodingType}</encodingType>
	                  <maxParts>{$ctx:maxParts}</maxParts>
	                  <partNumberMarker>{$ctx:partNumberMarker}</partNumberMarker>
	                  <objectName>{$ctx:objectName}</objectName>
	                  <bucketUrl>{$ctx:bucketUrl}</bucketUrl>
	               </amazons3.listParts>
	            </case>
			</switch>
			<filter source="$axis2:HTTP_SC" regex="^[^2][0-9][0-9]">
				<then>
					<switch source="$axis2:HTTP_SC">
						<case regex="401">
							<property name="ERROR_CODE" value="600401" />
							<property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)" />
							<property name="error_description" expression="json-eval($.Error.Message)" />
						</case>
						<case regex="404">
							<property name="ERROR_CODE" value="600404" />
							<property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)" />
							<property name="error_description" expression="json-eval($.Error.Message)" />
						</case>
						<case regex="403">
							<property name="ERROR_CODE" value="600403" />
							<property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)" />
							<property name="error_description" expression="json-eval($.Error.Message)" />
						</case>
						<case regex="400">
							<property name="ERROR_CODE" value="600400" />
							<property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)" />
							<property name="error_description" expression="json-eval($.Error.Message)" />
						</case>
						<case regex="500">
							<property name="ERROR_CODE" value="600500" />
							<property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)" />
							<property name="error_description" expression="json-eval($.Error.Message)" />
						</case>
						<default>
							<property name="ERROR_CODE" expression="$axis2:HTTP_SC" />
							<property name="ERROR_MESSAGE" expression="json-eval($.Error.Code)" />
							<property name="error_description" expression="json-eval($.Error.Message)" />
						</default>
					</switch>
				</then>
			</filter>
			<respond />
		</inSequence>
		<outSequence>
			<log />
			<send />
		</outSequence>
	</target>
	<description />
</proxy>                             
