<template name="createObjectACL" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="objectName" description="Name of the object whose acl needs to be set." />
	<parameter name="bucketUrl" description="End point URL of the request." />
	<parameter name="ownerId" description="ID of the bucket owner." />
	<parameter name="ownerDisplayName" description="Screen name of the bucket owner." />
	<parameter name="accessControlList" description="Container for ACL information." />
	<parameter name="versionId" description="Version Id of an object to remove a specific object version." />

	<sequence>
		<property name="uri.var.objectName" expression="$func:objectName" />
		<property name="uri.var.bucketUrl" expression="$func:bucketUrl" />
		<property name="uri.var.ownerId" expression="$func:ownerId" />
		<property name="uri.var.ownerDisplayName" expression="$func:ownerDisplayName" />
		<property name="uri.var.accessControlList" expression="$func:accessControlList" />
		<property name="uri.var.versionId" expression="$func:versionId" /> 		
		<property name="uri.var.uriRemainder" expression="fn:concat('/',get-property('uri.var.objectName'),'?acl')" /> 
		
		<!-- Setting the ACL of a specified object version -->
		<filter xpath="(string(get-property('uri.var.versionId'))) and get-property('uri.var.versionId') != ''">    
			<then>
				<property name="uri.var.uriRemainder" expression="fn:concat(get-property('uri.var.uriRemainder'),'&amp;versionId=',get-property('uri.var.versionId'))" /> 
			</then>
		</filter>
		
		<!-- Authentication Header Setup -->
		<class name="org.wso2.carbon.connector.amazons3.auth.AmazonS3AuthConnector" />
		  
		<filter xpath="(string(get-property('date'))) and get-property('date') != ''">  
			<then>
				<property name="Date" expression="get-property('date')" scope="transport" type="STRING" />
			</then>
		</filter> 
		
		<filter xpath="(string(get-property('isXAmzDateValue'))) and get-property('isXAmzDateValue') != ''">   
			<then>
				<property name="x-amz-date" expression="get-property('isXAmzDateValue')" scope="transport" type="STRING" />
			</then>
		</filter>

		<filter xpath="(string(get-property('authenticationCode'))) and get-property('authenticationCode') != ''">    
			<then>
				<property name="Authorization" expression="get-property('authenticationCode')" scope="transport" type="STRING" />
			</then>
		</filter> 
		 
		<payloadFactory media-type="xml">
			<format>
				<AccessControlPolicy>
					<Owner>
						<ID>$1</ID>
						<DisplayName>$2</DisplayName>
					</Owner>
					<AccessControlList>$3</AccessControlList>
				</AccessControlPolicy> 
			</format>
			<args>
				<arg expression="get-property('uri.var.ownerId')" />
				<arg expression="get-property('uri.var.ownerDisplayName')" />
				<arg expression="get-property('uri.var.accessControlList')" /> 
			</args>
		</payloadFactory>
 
		<call>
			<endpoint>
				<http method="put" uri-template="{uri.var.bucketUrl}{uri.var.uriRemainder}" />
			</endpoint>
		</call>

		<!-- Remove response custom header information -->
		<header name="x-amz-id-2" scope="transport" action="remove" />
		<header name="x-amz-request-id" scope="transport" action="remove" />
		<header name="Via" scope="transport" action="remove" />

	</sequence>
</template>