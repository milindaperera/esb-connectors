<template name="updatePullRequest" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="repoSlug" description="Identifier of the repository." />
	<parameter name="id" description="Identifier of the pullRequest." />
	<parameter name="title" description="A string representing the request title." />
	<parameter name="description" description="The description of the pull request." />
	<parameter name="source" description="Source object containing the branch and the repository data. " />
	<parameter name="destination" description="Destination object containing the branch and the commit data." />
	<parameter name="reviewers" description="A list of user objects to add as reviewers." />
	<parameter name="closeSourceBranch" description="Boolean indicating whether Bitbucket should close the source branch after the pull requests gets merged successfully." />

	<sequence>
		<property name="uri.var.repoSlug" expression="$func:repoSlug" />
		<property name="uri.var.id" expression="$func:id" />
		<property name="uri.var.title" expression="$func:title" />
		<property name="uri.var.description" expression="$func:description" />
		<property name="uri.var.source" expression="$func:source" />
		<property name="uri.var.destination" expression="$func:destination" />
		<property name="uri.var.reviewers" expression="$func:reviewers" />
		<property name="uri.var.closeSourceBranch" expression="$func:closeSourceBranch" />

		<payloadFactory media-type="json">
			<format>
				{
				"title":"$1"
				}
			</format>
			<args>
				<arg expression="get-property('uri.var.title')" />
			</args>
		</payloadFactory>

		<!--Construct payload for optional parameters -->
		<script language="js">
		  <![CDATA[
	  				payload = mc.getPayloadJSON();
					var description = mc.getProperty("uri.var.description");
					var destination = mc.getProperty("uri.var.destination");
					var source = mc.getProperty("uri.var.source");
					var reviewers = mc.getProperty("uri.var.reviewers");
					var closeSourceBranch = mc.getProperty("uri.var.closeSourceBranch");
									
					if ( description != null && description != "") { 				
						payload.description = description ;	
					}
					
					if ( destination != null && destination != "") { 				
						payload.destination = eval("("+destination+")");			
					}
					
					if ( source != null && source != "") { 				
						payload.source = eval("("+source+")");			
					}
					
					if ( reviewers != null && reviewers != "") { 				
						payload.reviewers = eval("("+reviewers+")");			
					}		
					
					if ( closeSourceBranch != null && closeSourceBranch != "") { 				
						payload.close_source_branch = closeSourceBranch;			
					}						
					
					mc.setPayloadJSON(payload);	
			]]>
		</script>
		<log>
		    <property name="json payload" expression="json-eval($.)"/>
		</log>
		
		<call>
			<endpoint>
				<http method="put"
					uri-template="{uri.var.apiUrl}/{uri.var.repoSlug}/pullrequests/{uri.var.id}" />
			</endpoint>
		</call>

		<!-- Remove response custom header information -->
		<header name="X-Frame-Options" scope="transport" action="remove" />
		<header name="Strict-Transport-Security" scope="transport" action="remove" />
		<header name="X-Render-Time" scope="transport" action="remove" />
		<header name="Vary" scope="transport" action="remove" />
		<header name="X-Served-By" scope="transport" action="remove" />
		<header name="X-Version" scope="transport" action="remove" />
		<header name="X-Static-Version" scope="transport" action="remove" />
		<header name="X-Request-Count" scope="transport" action="remove" />
		<header name="X-Content-Type-Options" scope="transport" action="remove" />
		<header name="WWW-Authenticate" scope="transport" action="remove" />
		<header name="Location" scope="transport" action="remove" />

	</sequence>
</template>