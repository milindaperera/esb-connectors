<?xml version="1.0" encoding="UTF-8"?>
<proxy xmlns="http://ws.apache.org/ns/synapse"
       name="bitbucket"
       transports="https,http"
       statistics="disable"
       trace="disable"
       startOnLoad="true">
   <target>
      <inSequence onError="faultHandlerSeq">
         <property name="apiUrl" expression="json-eval($.apiUrl)"/>
         <property name="username" expression="json-eval($.username)"/>
         <property name="password" expression="json-eval($.password)"/>
         <property name="owner" expression="json-eval($.owner)"/>
         <property name="repoSlug" expression="json-eval($.repoSlug)"/>
         <property name="scm" expression="json-eval($.scm)"/>
         <property name="name" expression="json-eval($.name)"/>
         <property name="isPrivate" expression="json-eval($.isPrivate)"/>
         <property name="description" expression="json-eval($.description)"/>
         <property name="forkingPolicy" expression="json-eval($.forkingPolicy)"/>
         <property name="language" expression="json-eval($.language)"/>
         <property name="hasIssues" expression="json-eval($.hasIssues)"/>
         <property name="hasWiki" expression="json-eval($.hasWiki)"/>
         <property name="revision" expression="json-eval($.revision)"/>
         <property name="branchortag" expression="json-eval($.branchortag)"/>
         <property name="include" expression="json-eval($.include)"/>
         <property name="exclude" expression="json-eval($.exclude)"/>
         <property name="pullRequestId" expression="json-eval($.pullRequestId)"/>
         <property name="title" expression="json-eval($.title)"/>
         <property name="id" expression="json-eval($.id)"/>
         <property name="source" expression="json-eval($.source)"/>
         <property name="destination" expression="json-eval($.destination)"/>
         <property name="reviewers" expression="json-eval($.reviewers)"/>
         <property name="closeSourceBranch" expression="json-eval($.closeSourceBranch)"/>
         <property name="message" expression="json-eval($.message)"/>
         <property name="commentId" expression="json-eval($.commentId)"/>
         <property name="state" expression="json-eval($.state)"/>
         <bitbucket.init>
            <apiUrl>{$ctx:apiUrl}</apiUrl>
            <username>{$ctx:username}</username>
            <password>{$ctx:password}</password>
            <owner>{$ctx:owner}</owner>
         </bitbucket.init>
         <switch source="get-property('transport', 'Action')">
            <case regex="urn:createRepository">
               <bitbucket.createRepository>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <scm>{$ctx:scm}</scm>
                  <name>{$ctx:name}</name>
                  <isPrivate>{$ctx:isPrivate}</isPrivate>
                  <description>{$ctx:description}</description>
                  <forkingPolicy>{$ctx:forkingPolicy}</forkingPolicy>
                  <language>{$ctx:language}</language>
                  <hasIssues>{$ctx:hasIssues}</hasIssues>
                  <hasWiki>{$ctx:hasWiki}</hasWiki>
               </bitbucket.createRepository>
            </case>
            <case regex="urn:updatePullRequest">
               <bitbucket.updatePullRequest>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <id>{$ctx:id}</id>
                  <title>{$ctx:title}</title>
                  <description>{$ctx:description}</description>
                  <source>{$ctx:source}</source>
                  <destination>{$ctx:destination}</destination>
                  <reviewers>{$ctx:reviewers}</reviewers>
                  <closeSourceBranch>{$ctx:closeSourceBranch}</closeSourceBranch>
               </bitbucket.updatePullRequest>
            </case>
            <case regex="urn:getRepository">
               <bitbucket.getRepository>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
               </bitbucket.getRepository>
            </case>
            <case regex="urn:getPullRequestDiff">
               <bitbucket.getPullRequestDiff>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <pullRequestId>{$ctx:pullRequestId}</pullRequestId>
               </bitbucket.getPullRequestDiff>
            </case>
            <case regex="urn:mergePullRequest">
               <bitbucket.mergePullRequest>
                  <message>{$ctx:message}</message>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <pullRequestId>{$ctx:pullRequestId}</pullRequestId>
                  <closeSourceBranch>{$ctx:closeSourceBranch}</closeSourceBranch>
               </bitbucket.mergePullRequest>
            </case>
            <case regex="urn:discardPullRequest">
               <bitbucket.discardPullRequest>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <pullRequestId>{$ctx:pullRequestId}</pullRequestId>
                  <message>{$ctx:message}</message>
               </bitbucket.discardPullRequest>
            </case>
            <case regex="urn:listCommits">
               <bitbucket.listCommits>
                  <revision>{$ctx:revision}</revision>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <branchortag>{$ctx:branchortag}</branchortag>
                  <include>{$ctx:include}</include>
                  <exclude>{$ctx:exclude}</exclude>
               </bitbucket.listCommits>
            </case>
            <case regex="urn:listPullRequestComments">
               <bitbucket.listPullRequestComments>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <pullRequestId>{$ctx:pullRequestId}</pullRequestId>
               </bitbucket.listPullRequestComments>
            </case>
            <case regex="urn:listCommitComments">
               <bitbucket.listCommitComments>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <revision>{$ctx:revision}</revision>
                  <commentId>{$ctx:commentId}</commentId>
               </bitbucket.listCommitComments>
            </case>
            <case regex="urn:deleteRepository">
               <bitbucket.deleteRepository>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
               </bitbucket.deleteRepository>
            </case>
            <case regex="urn:createPullRequest">
               <bitbucket.createPullRequest>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <title>{$ctx:title}</title>
                  <description>{$ctx:description}</description>
                  <source>{$ctx:source}</source>
                  <destination>{$ctx:destination}</destination>
                  <reviewers>{$ctx:reviewers}</reviewers>
                  <closeSourceBranch>{$ctx:closeSourceBranch}</closeSourceBranch>
               </bitbucket.createPullRequest>
            </case>
            <case regex="urn:getPullRequest">
               <bitbucket.getPullRequest>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <id>{$ctx:id}</id>
               </bitbucket.getPullRequest>
            </case>
            <case regex="urn:listPullRequest">
               <bitbucket.listPullRequest>
                  <repoSlug>{$ctx:repoSlug}</repoSlug>
                  <state>{$ctx:state}</state>
               </bitbucket.listPullRequest>
            </case>
         </switch>
         <respond/>
      </inSequence>
      <outSequence>
         <log/>
         <send/>
      </outSequence>
   </target>
   <description/>
</proxy>
                                