<template name="uploadTaskAttachment" xmlns="http://ws.apache.org/ns/synapse">
  <parameter name="taskId" description="ID of the Project Task to which the Attachment is to be associated."/>
  <parameter name="fileName" description="Display name of the file to be uploaded."/>
  
  <sequence>
    <property name="uri.var.taskId" expression="$func:taskId"/>
    <property name="uri.var.fileName" expression="$func:fileName"/>
    <property name="uri.var.queryString" value=""/>
    
    <filter xpath="boolean(get-property('uri.var.fileName'))">
    	<then>
    		<property name="uri.var.queryString" expression="fn:concat('?file_name=',get-property('uri.var.fileName'))"/>
    	</then>
    </filter> 
    
	<!-- content type set to application/binary -->
	<property name="Content-Type" value="application/binary" scope="transport" type="STRING" />

    <!-- Force ESB to send the content length to the API -->
	<property name="FORCE_HTTP_CONTENT_LENGTH" value="true" scope="axis2" />
	<property name="COPY_CONTENT_LENGTH_FROM_INCOMING" value="true" scope="axis2" />
			
	<call>
      <endpoint>
        <http method="post" uri-template="{uri.var.apiUrl}/api_v2/projects/{uri.var.projectId}/tasks/{uri.var.taskId}/attachments/upload{uri.var.queryString}"/>
      </endpoint>
    </call>
    
    <!-- Remove custom Headers from the Response -->
    <header name="Via" scope="transport" action="remove"/>
    <header name="ETag" scope="transport" action="remove"/>
    <header name="X-Runtime" scope="transport" action="remove"/>
    <header name="X-Powered-By" scope="transport" action="remove"/>
    <header name="X-Rack-Cache" scope="transport" action="remove"/>
    <header name="X-Request-Id" scope="transport" action="remove"/>
    <header name="X-Frame-Options" scope="transport" action="remove"/>
    <header name="X-UA-Compatible" scope="transport" action="remove"/>
    <header name="X-XSS-Protection" scope="transport" action="remove"/>
    <header name="X-Content-Type-Options" scope="transport" action="remove"/>
    
  </sequence>
</template>