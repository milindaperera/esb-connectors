<template name="listTickets" xmlns="http://ws.apache.org/ns/synapse">
	<parameter name="organizationId" description="The organization id to be query." />
	<parameter name="userId" description="The user id to be query." />
	<parameter name="isCcd" description="If user required collaborated ids to be listed." />
	<parameter name="isRecent" description="If user required recently created ids to be listed." />
	<parameter name="externalId" description="User can pass external id." />

	<sequence>
		<property name="uri.var.organizationId" expression="$func:organizationId" />
		<property name="uri.var.userId" expression="$func:userId" />
		<property name="uri.var.isCcd" expression="$func:isCcd" />
		<property name="uri.var.isRecent" expression="$func:isRecent" />
		<property name="uri.var.externalId" expression="$func:externalId" />
		<property name="uri.var.uriAppend" value="/api/v2" />
		<property name="uri.var.uriRemainder" value="" />

		<!-- API support for five end points and url remainder get changed according to the user request -->
		<filter xpath="boolean(get-property('uri.var.organizationId'))">
			<then>
				<!-- If user send organization id end point is /api/v2/organizations/{organization_id}/tickets.json -->
				<property name="uri.var.uriRemainder"
					expression="fn:concat(get-property('uri.var.uriAppend'),'/organizations/',get-property('uri.var.organizationId'),'/tickets.json')" />
			</then>
			<else>
				<!-- User can pass user id instead of organization id then there are two end points. -->
				<filter xpath="boolean(get-property('uri.var.userId'))">
					<then>
						<!-- User can pass user id ccd value true then end point is /api/v2/users/{user_id}/tickets/ccd.json. -->
						<filter xpath="boolean(get-property('uri.var.isCcd')) and get-property('uri.var.isCcd') = 'true'">
							<then>
								<property name="uri.var.uriRemainder"
									expression="fn:concat(get-property('uri.var.uriAppend'),'/users/',get-property('uri.var.userId'),'/tickets/ccd.json')" />
							</then>
							<else>
								<!-- User can pass user id without ccd value. Then end point is /api/v2/users/{user_id}/tickets/requested.json. -->
								<property name="uri.var.uriRemainder"
									expression="fn:concat(get-property('uri.var.uriAppend'),'/users/',get-property('uri.var.userId'),'/tickets/requested.json')" />
							</else>
						</filter>
					</then>
					<else>
						<filter xpath="boolean(get-property('uri.var.isRecent')) and get-property('uri.var.isRecent') = 'true'">
							<then>
								<!-- If it is a recently created end point is /api/v2/tickets/recent.json. -->
								<property name="uri.var.uriRemainder" expression="fn:concat(get-property('uri.var.uriAppend'),'/tickets/recent.json')" />
							</then>
							<else>
								<!-- User can pass external id optional parameter with default end point. -->
								<filter xpath="boolean(get-property('uri.var.externalId'))">
									<then>
										<property name="uri.var.uriRemainder"
											expression="fn:concat(get-property('uri.var.uriAppend'), '/tickets.json?external_id=', get-property('uri.var.externalId'))" />
									</then>
									<else>
										<!-- If user didn't pass any parameters, then default end point is /api/v2/tickets.json. -->
										<property name="uri.var.uriRemainder" expression="fn:concat(get-property('uri.var.uriAppend'),'/tickets.json')" />
									</else>
								</filter>
							</else>
						</filter>
					</else>
				</filter>
			</else>
		</filter>


		<call>
			<endpoint>
				<http method="get" uri-template="{uri.var.apiUrl}{uri.var.uriRemainder}" />
			</endpoint>
		</call>

		<!-- Remove response custom header information -->
		<header name="ETag" scope="transport" action="remove" />
		<header name="Status" scope="transport" action="remove" />
		<header name="Location" scope="transport" action="remove" />
		<header name="Via" scope="transport" action="remove" />
		<header name="X-Content-Type-Options" scope="transport" action="remove" />
		<header name="X-Frame-Options" scope="transport" action="remove" />
		<header name="X-Rack-Cache" scope="transport" action="remove" />
		<header name="X-Request-Id" scope="transport" action="remove" />
		<header name="X-Runtime" scope="transport" action="remove" />
		<header name="X-UA-Compatible" scope="transport" action="remove" />
		<header name="X-Zendesk-API-Version" scope="transport" action="remove" />
		<header name="X-Zendesk-Origin-Server" scope="transport" action="remove" />
		<header name="X-Zendesk-Request-Id" scope="transport" action="remove" />
		<header name="X-Zendesk-User-Id" scope="transport" action="remove" />
		<header name="WWW-Authenticate" scope="transport" action="remove" />
		<header name="Set-Cookie" scope="transport" action="remove" />

	</sequence>
</template>