<template name="editIssue" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="owner" description="The owner of the repository having the specified issue." />
	<parameter name="repo" description="The repository to retrieve issue from." />
	<parameter name="number" description="The issue number." />
	<parameter name="title" description="The title of the issue." />
	<parameter name="issueCommentBody" description="The contents of the issue." />
	<parameter name="assignee" description="Login for the user that this issue should be assigned to." />
	<parameter name="state" description="State of the issue." />
	<parameter name="milestone" description="Milestone to associate this issue with." />
	<parameter name="labels" description="Labels to associate with this issue." />
	
	<sequence>
	
		<property name="uri.var.owner" expression="$func:owner" />
		<property name="uri.var.repo" expression="$func:repo" />
		<property name="uri.var.number" expression="$func:number" />
		<property name="uri.var.title" expression="$func:title" />
		<property name="uri.var.issueCommentBody" expression="$func:issueCommentBody" />
		<property name="uri.var.assignee" expression="$func:assignee" />
		<property name="uri.var.state" expression="$func:state" />
		<property name="uri.var.milestone" expression="$func:milestone" />
		<property name="uri.var.labels" expression="$func:labels" />
		
		<payloadFactory media-type="json">
			<format>
				{}
			</format>
			<args>
			</args>
		</payloadFactory>
		
		<script language="js">
        <![CDATA[     
                payload = mc.getPayloadJSON();               
                var title = mc.getProperty("uri.var.title"); 
                var issueCommentBody = mc.getProperty("uri.var.issueCommentBody");
                var assignee = mc.getProperty("uri.var.assignee"); 
                var state = mc.getProperty("uri.var.state"); 
                var milestone = mc.getProperty("uri.var.milestone");
                var labels = mc.getProperty("uri.var.labels"); 
			
				if(title != null && title != ""){
					payload.title = title;
				}
				
				if(issueCommentBody != null && issueCommentBody != ""){
					payload.body = issueCommentBody;
				}
				
				if(assignee != null && assignee != ""){
					payload.assignee = assignee;
				}
				
				if(state != null && state != ""){
					payload.state = state;
				}
				
				if(milestone != null && milestone != ""){
					payload.milestone = milestone;
				}
				
				if(labels !=null && labels != ""){                                
				payload.labels= eval("("+ labels +")");  
				}
				
	          	 mc.setPayloadJSON(payload);                                     
               ]]>
		</script>

		<property name="DISABLE_CHUNKING" scope="axis2" value="true" />
		
		<call>
			<endpoint>
				<http method="patch"
					uri-template="{uri.var.apiUrl}/repos/{uri.var.owner}/{uri.var.repo}/issues/{uri.var.number}" />
			</endpoint>
		</call>
		
		<header name="Access-Control-Expose-Headers" scope="transport" action="remove" />
		<header name="X-RateLimit-Remaining" scope="transport" action="remove" />
		<header name="X-XSS-Protection" scope="transport" action="remove" />
		<header name="X-RateLimit-Reset" scope="transport" action="remove" />
		<header name="X-GitHub-Request-Id" scope="transport" action="remove" />
		<header name="X-Content-Type-Options" scope="transport" action="remove" />
		<header name="X-Frame-Options" scope="transport" action="remove" />
		<header name="X-OAuth-Scopes" scope="transport" action="remove" />
		<header name="X-Accepted-OAuth-Scopes" scope="transport" action="remove" />
		<header name="X-GitHub-Media-Type" scope="transport" action="remove" />
		<header name="X-Served-By" scope="transport" action="remove" />
		<header name="Vary" scope="transport" action="remove" />
		<header name="X-RateLimit-Limit" scope="transport" action="remove" />
		<header name="Access-Control-Allow-Credentials" scope="transport" action="remove" />
		<header name="Content-Security-Policy" scope="transport" action="remove" />
				
	</sequence>
</template>