<template name="updateExpense" xmlns="http://ws.apache.org/ns/synapse">

	<parameter name="expenseId" description="The ID of the expense to be updated" />
	<parameter name="staffId" description="Staff ID number	" />
	<parameter name="categoryId"
		description="The ID associated with categories like Automobile, Contractors, etc" />
	<parameter name="amount" description="Related project as ID" />
	<parameter name="projectId" description="Specifically assigned to this client" />
	<parameter name="clientId" description="Associated cost" />
	<parameter name="vendor" description="Associated vendor name" />
	<parameter name="date" description="Applicable date" />
	<parameter name="notes" description="Notes associated with the expense report" />
	<parameter name="status" description="Status ID of the" />
	<parameter name="tax1Name" description="Tax 1 Name" />
	<parameter name="tax1Percent" description="Percentage of tax 1" />
	<parameter name="tax1Amount" description="Amount of tax 1" />
	<parameter name="tax2Name" description="Tax 2 Name" />
	<parameter name="tax2Percent" description="Percentage of tax 2" />
	<parameter name="tax2Amount" description="Amount of tax 2" />
	<parameter name="compoundTax" description="Whether the tax is compound, true or false" />
	<sequence>
		<property name="uri.var.expenseId" expression="$func:expenseId" />
		<property name="uri.var.categoryId" expression="$func:categoryId" />
		<property name="uri.var.staffId" expression="$func:staffId" />
		<property name="uri.var.amount" expression="$func:amount" />
		<property name="uri.var.projectId" expression="$func:projectId" />
		<property name="uri.var.clientId" expression="$func:clientId" />
		<property name="uri.var.vendor" expression="$func:vendor" />
		<property name="uri.var.date" expression="$func:date" />
		<property name="uri.var.notes" expression="$func:notes" />
		<property name="uri.var.status" expression="$func:status" />
		<property name="uri.var.tax1Name" expression="$func:tax1Name" />
		<property name="uri.var.tax1Percent" expression="$func:tax1Percent" />
		<property name="uri.var.tax1Amount" expression="$func:tax1Amount" />
		<property name="uri.var.tax2Name" expression="$func:tax2Name" />
		<property name="uri.var.tax2Percent" expression="$func:tax2Percent" />
		<property name="uri.var.tax2Amount" expression="$func:tax2Amount" />
		<property name="uri.var.compoundTax" expression="$func:compoundTax" />
		<payloadFactory media-type="xml">
			<format>
				<request method="expense.update" xmlns="">
					<expense>
					    <expense_id>$1</expense_id>
					</expense>
				</request>
			</format>
			<args>
			    <arg expression="get-property('uri.var.expenseId')" />
			</args>
		</payloadFactory>
		<script language="js">
			<![CDATA[
			
				//request body param variables
				var categoryId = mc.getProperty('uri.var.categoryId');
				var staffId = mc.getProperty('uri.var.staffId');
				var amount = mc.getProperty('uri.var.amount');
				var projectId = mc.getProperty('uri.var.projectId');
				var clientId = mc.getProperty('uri.var.clientId');
				var vendor = mc.getProperty('uri.var.vendor');
				var status = mc.getProperty('uri.var.status');
				var notes = mc.getProperty('uri.var.notes');
				var tax1Name = mc.getProperty('uri.var.tax1Name');
				var tax1Percent = mc.getProperty('uri.var.tax1Percent');
				var tax1Amount = mc.getProperty('uri.var.tax1Amount');
				var tax2Name = mc.getProperty('uri.var.tax2Name');
				var tax2Percent = mc.getProperty('uri.var.tax2Percent');
				var tax2Amount = mc.getProperty('uri.var.tax2Amount');
				var date = mc.getProperty('uri.var.date');
				var compoundTax = mc.getProperty('uri.var.compoundTax');
			
				//Get the existing payload
				var payload = mc.getPayloadXML();
				
				if (categoryId != null && categoryId != "") {
					payload.expense.category_id = categoryId;
				}
				
				if (staffId != null && staffId != "") {
					payload.expense.staff_id = staffId;
				}
				
				if (amount != null && amount != "") {
					payload.expense.amount = amount;
				}
				
				if (projectId != null && projectId != "") {
					payload.expense.project_id = projectId;
				}
				
				if (clientId != null && clientId != "") {
					payload.expense.client_id = clientId;
				}
				
				if (vendor != null && vendor != "") {
					payload.expense.vendor = vendor;
				}
				
				if (status != null && status != "") {
					payload.expense.status = status;
				}
				
				if (notes != null && notes != "") {
					payload.expense.notes = notes;
				}
				
				if (tax1Name != null && tax1Name != "") {
					payload.expense.tax1_name = tax1Name;
				}
				
				if (tax1Percent != null && tax1Percent != "") {
					payload.expense.tax1_percent = tax1Percent;
				}
				
				if (tax1Amount != null && tax1Amount != "") {
					payload.expense.tax1_amount = tax1Amount;
				}
				
				if (tax2Name != null && tax2Name != "") {
					payload.expense.tax2_name = tax2Name;
				}
				
				if (tax2Percent != null && tax2Percent != "") {
					payload.expense.tax2_percent = tax2Percent;
				}
				
				if (tax2Amount != null && tax2Amount != "") {
					payload.expense.tax2_amount = tax2Amount;
				}

				if (date != null && date != "") {
					payload.expense.date = date;
				}
				
				if (compoundTax != null && compoundTax != "") {
					payload.expense.compound_tax = compoundTax;
				}
				
				//Set the newly constructed payload
				mc.setPayloadXML(payload);
				
			]]>
		</script>
		<call>
			<endpoint>
				<http method="post" uri-template="{uri.var.apiUrl}/api/2.1/xml-in" />
			</endpoint>
		</call>

		<header name="X-Frame-Options" scope="transport" action="remove" />
		<header name="Strict-Transport-Security" scope="transport"
			action="remove" />
		<header name="WWW-Authenticate" scope="transport" action="remove" />
	</sequence>
</template>